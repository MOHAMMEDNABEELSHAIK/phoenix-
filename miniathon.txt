import os
import base64
import json
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from googleapiclient.discovery import build
from email.mime.text import MIMEText

# Define your SMS gateway (example for Verizon)
SMS_GATEWAY = 'phonenumber@vtext.com'

# Gmail API scopes
SCOPES = ['https://www.googleapis.com/auth/gmail.send']

def send_email_via_gmail(subject, body):
    creds = None
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        
        with open('token.json', 'w') as token:
            token.write(creds.to_json())

    service = build('gmail', 'v1', credentials=creds)

    # Create the email content
    message = MIMEText(body)
    message['to'] = SMS_GATEWAY
    message['subject'] = subject

    raw_message = base64.urlsafe_b64encode(message.as_bytes()).decode()

    message_body = {
        'raw': raw_message
    }

    # Send the email
    try:
        message = service.users().messages().send(userId='me', body=message_body).execute()
        print(f'Email sent! Message Id: {message["id"]}')
    except Exception as error:
        print(f'An error occurred: {error}')

# Example of sending an SMS reminder
send_email_via_gmail("Class Reminder", "Donâ€™t forget, your class starts at 10 AM tomorrow!")